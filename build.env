#! /bin/bash

# Sources bitbake environment, copies default conf files, sets proper machine
# in local.conf and creates build dir with appropriate name. 
#
# Usage: . build.env <MACHINE_NAME>


# check if script is sourced
if [[ ! "${BASH_SOURCE[0]}" != "${0}" ]]; then
    echo "Please source this script"
    exit 1
fi

# machine argument required
if [ "$#" -ne 1 ]; then
    echo "Usage: . build.env <machine>"
    return 1
fi


# check if argument is correct
if [[ ! " ${SUPPORTED_MACHINES[@]} " =~ " ${MACHINE} " ]]; then
    echo "Supported machines: ${SUPPORTED_MACHINES[@]}"
    return 1
fi

WORK_DIR="$( cd "$(dirname "$0")" ; pwd -P )"   # script directory
SSTATE_DIR="$WORK_DIR/shared-state"
DL_DIR="$WORK_DIR/downloads"
MACHINE=$1
SUPPORTED_MACHINES=(raspberrypi3 raspberrypi4 raspberrypi4-64 qemux86 qemux86-64)

# if build dir exist then just source script to set env
if [ -d "$WORK_DIR/$MACHINE" ]; then
    . layers/poky/oe-init-build-env $MACHINE
# else modify local.conf and add bblayers
else
    mkdir -p "$WORK_DIR/$MACHINE/conf"
    cp default_conf/bblayers.conf "$MACHINE/conf/bblayers.conf"
    cp default_conf/local.conf "$MACHINE/conf/local.conf"
    sed -i "s/###_FILL_MACHINE_###/$MACHINE/g" "$MACHINE/conf/local.conf"
    sed -i "s*###_FILL_SSTATE_DIR_###*$SSTATE_DIR*g" "$MACHINE/conf/local.conf"
    sed -i "s*###_FILL_DL_DIR_###*$DL_DIR*g" "$MACHINE/conf/local.conf"
    sed -i "s*###_FILL_LAYER_###*$WORK_DIR*g" "$MACHINE/conf/bblayers.conf"
    . layers/poky/oe-init-build-env $MACHINE
fi

unset WORK_DIR
unset SSTATE_DIR
unset DL_DIR
unset MACHINE
unset SUPPORTED_MACHINES

